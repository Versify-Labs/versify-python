name: Generate Python Client

# Runs this action whenever there are any changes to the branch.
on:
  push:
    branches:
      - dev

jobs:
  client:
    runs-on: ubuntu-latest

    steps:
      # Checks out the entire repo.
      - name: Checkout Repo
        uses: actions/checkout@v3

      # Generates a openapi.yaml file based on the FastAPI project.
      - name: Generate OpenAPI file
        uses: column-street/fastapi-openapi-specs-action@v1.0.0
        with:
          installDepedencies: pip install -r vongo/requirements.txt
          moduleDir: vongo.app
          fileName: main.py
          appName: app

      # Uses an external tool, openapitools-generator-action, to generate the client code.
      # The 'openapirc.json' file is the following: { "packageName": "fast", "projectName": "fast" }
      # and it lives inside the master branch of the repository. Comamnd outputs a new folder called
      # 'python-client' with the relevant client code.
      - name: Generate Python Client
        uses: triaxtec/openapitools-generator-action@v1.0.0
        with:
          generator: python
          openapi-file: openapi.yaml
          config-file: openapirc.yaml

      # Deletes every file in the folder, except '.git' and the new generated 'python-client' folder.
      # Moves all content of the 'python-client' folder to the root directory.
      - name: Clean Branch
        run: |
          # Removes all files except the .git and python-client folder.
          shopt -s extglob
          sudo rm -rf !(.|..|.git|python-client)

          # Moves all of the content of the python-client folder out and deletes the folder.
          mv python-client/* .
          rm -rf python-client

      # Pushes the new changes into another repository.
      # - name: Push to Repo
      #   uses: dmnemec/copy_file_to_another_repo_action@main
      #   env:
      #     API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      #   with:
      #     source_file: "python-client"
      #     destination_repo: "Versify-Labs/versify-python"
      #     destination_branch: "main"
      #     destination_folder: "."
      #     user_email: "troy@versifylabs.com"
      #     user_name: "troywsmith"
      #     commit_message: "Update Versify API P"

      # Pushes the new changes into the same repository.
      - name: Push to Repo
        run: |
          ls -al

          if [ -z "$API_TOKEN_GITHUB" ]
          then
            echo "API_TOKEN_GITHUB must be defined"
            return 1
          fi

          GIT_SERVER=github.com
          USER_EMAIL=troy@versifylabs.com
          USER_NAME=troywsmith

          DESTINATION_REPO=Versify-Labs/versify-python
          DESTINATION_BRANCH=main
          DESTINATION_DIR=$(mktemp -d)

          echo "Cloning destination git repository"
          git config --unset-all http.https://github.com/.extraheader
          git config --global user.email "$USER_EMAIL"
          git config --global user.name "$USER_NAME"
          git clone --single-branch --branch $DESTINATION_BRANCH "https://x-access-token:$API_TOKEN_GITHUB@$GIT_SERVER/$DESTINATION_REPO.git" "$DESTINATION_DIR"

          echo "Syncing $pwd to $DESTINATION_DIR"
          rsync -avrh . "$DESTINATION_DIR"

          echo "Adding git commit"
          cd "$DESTINATION_DIR"
          git add .

          if git status | grep -q "Changes to be committed"
          then
            git commit --message "Update from https://$GIT_SERVER/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}"
            echo "Pushing git commit"
            git push -u origin HEAD:"$DESTINATION_BRANCH"
          else
            echo "No changes detected"
          fi
