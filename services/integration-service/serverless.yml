org: versify
app: versify
service: integration-service

frameworkVersion: ">=2.24.0"

plugins:
  - serverless-python-requirements

layers:
  shared:
    path: layers/shared
    name: shared
    description: Source code of common libraries shared by services
    compatibleRuntimes:
      - python3.9
    compatibleArchitectures:
      - x86_64
    retain: false

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    ENVIRONMENT: ${opt:stage, 'dev'}
    LOG_LEVEL: INFO
    MONGO_DB_URL: ${ssm:/versify/services/mongo/db/url}
    POWERTOOLS_LOGGER_SAMPLE_RATE: 0.1
    POWERTOOLS_LOGGER_LOG_EVENT: true
    POWERTOOLS_METRICS_NAMESPACE: versify
    POWERTOOLS_SERVICE_NAME: integration-service
    POWERTOOLS_TRACE_DISABLED: false
    SECRET_NAME: /versify/platform/secret
    STEP_FUNCTION_LOG_ARN: ${ssm:/versify/services/automation/stepfunction/log/arn}
    STEP_FUNCTION_ROLE_ARN: ${ssm:/versify/services/automation/stepfunction/role/arn}
    STRIPE_GROWTH_PRICE: ${ssm:/versify/services/stripe/growth/price}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "events:*"
          Resource:
            - "arn:aws:events:${aws:region}:*:event-bus/*"
            - "arn:aws:events:${aws:region}:*:rule/*"
        - Effect: Allow
          Action:
            - "scheduler:*"
          Resource:
            - "arn:aws:scheduler:${aws:region}:*:schedule/*"
        - Effect: Allow
          Action:
            - "s3:*"
          Resource:
            - "arn:aws:s3:::cdn.versifylabs.com"
            - "arn:aws:s3:::cdn.versifylabs.com/*"
            - "arn:aws:s3:::cdn-dev.versifylabs.com"
            - "arn:aws:s3:::cdn-dev.versifylabs.com/*"
        - Effect: Allow
          Action:
            - secretsmanager:GetSecretValue
          Resource:
            - "arn:aws:secretsmanager:${aws:region}:*:secret:/versify/platform/secret*"
        - Effect: Allow
          Action:
            - "states:*"
          Resource:
            - "*"
        - Effect: Allow
          Action:
            - "iam:PassRole"
          Resource:
            - "*"
  layers:
    - arn:aws:lambda:${aws:region}:017000801446:layer:AWSLambdaPowertoolsPython:26
    - !Ref SharedLambdaLayer
  runtime: python3.9
  timeout: 30
  tracing:
    lambda: true

functions:
  IntegrationService-OnAccountEvents:
    handler: src.handlers.account.handler
    name: IntegrationService-OnAccountEvents
    description: Handle account events
    events:
      - eventBridge:
          eventBus: ${ssm:/versify/services/versify/bus/arn}
          pattern:
            source:
              - versify
            detail-type:
              - account.created
  IntegrationService-OnClaimEvents:
    handler: src.handlers.claim.handler
    name: IntegrationService-OnClaimEvents
    description: Handle claim events
    events:
      - eventBridge:
          eventBus: ${ssm:/versify/services/versify/bus/arn}
          pattern:
            source:
              - versify
            detail-type:
              - claim.created
              - claim.updated
  IntegrationService-OnCollectionEvents:
    handler: src.handlers.collection.handler
    name: IntegrationService-OnCollectionEvents
    description: Handle collection events
    events:
      - eventBridge:
          eventBus: ${ssm:/versify/services/versify/bus/arn}
          pattern:
            source:
              - versify
            detail-type:
              - collection.updated
  IntegrationService-OnContactEvents:
    handler: src.handlers.contact.handler
    name: IntegrationService-OnContactEvents
    description: Handle contact events
    events:
      - eventBridge:
          eventBus: ${ssm:/versify/services/versify/bus/arn}
          pattern:
            source:
              - versify
            detail-type:
              - contact.created
              - contact.updated
  IntegrationService-OnProductEvents:
    handler: src.handlers.product.handler
    name: IntegrationService-OnProductEvents
    description: Handle product events
    events:
      - eventBridge:
          eventBus: ${ssm:/versify/services/versify/bus/arn}
          pattern:
            source:
              - versify
            detail-type:
              - product.updated
  IntegrationService-OnStripeEvents:
    handler: src.handlers.stripe.handler
    name: IntegrationService-OnStripeEvents
    description: Handle stripe events
    events:
      - eventBridge:
          eventBus: ${ssm:/versify/services/partner/bus/arn}
          pattern:
            source:
              - stripe
            detail-type:
              - event.created
            detail:
              type:
                - customer.created
                - customer.updated
                - customer.subscription.created
                - customer.subscription.updated
  IntegrationService-OnTatumEvents:
    handler: src.handlers.tatum.handler
    name: IntegrationService-OnTatumEvents
    description: Handle tatum events
    events:
      - eventBridge:
          eventBus: ${ssm:/versify/services/partner/bus/arn}
          pattern:
            source:
              - tatum
            detail-type:
              - transaction.created
  IntegrationService-PublishSlackEvents:
    handler: src.handlers.slack.handler
    name: IntegrationService-PublishEventsToSlack
    description: Publish events to Slack
    events:
      - eventBridge:
          eventBus: ${ssm:/versify/services/partner/bus/arn}
          pattern:
            account:
              - ${aws:accountId}
      - eventBridge:
          eventBus: ${ssm:/versify/services/versify/bus/arn}
          pattern:
            account:
              - ${aws:accountId}
  IntegrationService-PublishWebhookEvents:
    handler: src.handlers.webhook.handler
    name: IntegrationService-Webhook
    description: Consume events and publish to matching webhooks
    events:
      - eventBridge:
          eventBus: ${ssm:/versify/services/versify/bus/arn}
          pattern:
            source:
              - versify

resources:
  Resources:
    # Partner Bus
    PartnerBus:
      Type: AWS::Events::EventBus
      Properties:
        Name: "partner"
    PartnerBusArnParameter:
      Type: AWS::SSM::Parameter
      Properties:
        Name: !Sub /versify/services/partner/bus/arn
        Type: String
        Value: !GetAtt PartnerBus.Arn
    # Versify Bus
    VersifyBus:
      Type: AWS::Events::EventBus
      Properties:
        Name: !Sub "versify"
    VersifyBusArnParameter:
      Type: AWS::SSM::Parameter
      Properties:
        Name: !Sub /versify/services/versify/bus/arn
        Type: String
        Value: !GetAtt VersifyBus.Arn
    # Parameters to be used by external services
    SharedLayerArnParameter:
      Type: AWS::SSM::Parameter
      Properties:
        Name: !Sub /versify/services/integration/shared/layer/arn
        Type: String
        Value: !Ref SharedLambdaLayer
