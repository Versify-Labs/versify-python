org: versify
app: versify
service: partner-service

frameworkVersion: ">=2.24.0"

plugins:
  - serverless-python-requirements

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  apiGateway:
    restApiId:
      "Fn::ImportValue": VersifyApiId
    restApiRootResourceId:
      "Fn::ImportValue": VersifyApiRootResourceId
  environment:
    AUTH0_DB_CONNECTION: ${ssm:/versify/services/auth0/connections/db/id}
    AUTH0_OWNER_ROLE: ${ssm:/versify/services/auth0/roles/owner/id}
    ENVIRONMENT: ${opt:stage, 'dev'}
    LOG_LEVEL: INFO
    POWERTOOLS_LOGGER_SAMPLE_RATE: 0.1
    POWERTOOLS_LOGGER_LOG_EVENT: true
    POWERTOOLS_METRICS_NAMESPACE: versify
    POWERTOOLS_SERVICE_NAME: partner-service
    POWERTOOLS_TRACE_DISABLED: false
    SECRET_NAME: /versify/platform/secret
    STRIPE_BASIC_PACKAGE_PRICE: ${ssm:/versify/services/stripe/basic/package/price}
    STRIPE_BASIC_COLLECTION_PRICE: ${ssm:/versify/services/stripe/basic/collection/price}
    STRIPE_BASIC_MINT_PRICE: ${ssm:/versify/services/stripe/basic/mint/price}
    STRIPE_GROWTH_PACKAGE_PRICE: ${ssm:/versify/services/stripe/growth/package/price}
    STRIPE_GROWTH_COLLECTION_PRICE: ${ssm:/versify/services/stripe/growth/collection/price}
    STRIPE_GROWTH_MINT_PRICE: ${ssm:/versify/services/stripe/growth/mint/price}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - secretsmanager:GetSecretValue
      Resource:
        - "arn:aws:secretsmanager:${self:provider.region}:*:secret:/versify/platform/secret*"
  layers:
    - arn:aws:lambda:${aws:region}:017000801446:layer:AWSLambdaPowertoolsPython:11
  runtime: python3.9
  timeout: 30
  tracing:
    lambda: true

functions:
  PartnerApi-Config:
    handler: src.routes.config.handler
    name: PartnerApi-Config
    events:
      - http:
          method: get
          path: /partners/all/config
          operationId: Config
          authorizer:
            type: REQUEST
            authorizerId: ${ssm:/versify/services/versify/api/authorizer/id}
          cors:
            origin: "*"
            headers: "*"
            allowCredentials: false
          request:
            parameters:
              headers:
                X-Api-Key: false
                X-Authorization: false
                X-Organization: false
      - http:
          method: get
          path: /partners/all/ping
          operationId: Ping
          authorizer:
            type: REQUEST
            authorizerId: ${ssm:/versify/services/versify/api/authorizer/id}
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Api-Key
              - X-Authorization
              - X-Organization
            allowCredentials: false
          request:
            parameters:
              headers:
                X-Api-Key: false
                X-Authorization: false
                X-Organization: false
  PartnerApi-Auth0:
    handler: src.routes.auth0.handler
    name: PartnerApi-Auth0
    events:
      - http:
          method: post
          path: /partners/auth0/organizations
          operationId: CreateOrganization
          authorizer:
            type: REQUEST
            authorizerId: ${ssm:/versify/services/versify/api/authorizer/id}
          cors:
            origin: "*"
            headers: "*"
            allowCredentials: false
          request:
            parameters:
              headers:
                X-Authorization: true
                X-Organization: false
            schemas:
              application/json: ${file(schemas/auth0/create_organization.json)}
      - http:
          method: get
          path: /partners/auth0/organizations/{id}
          operationId: GetOrganization
          authorizer:
            type: REQUEST
            authorizerId: ${ssm:/versify/services/versify/api/authorizer/id}
          cors:
            origin: "*"
            headers: "*"
            allowCredentials: false
          request:
            parameters:
              headers:
                X-Authorization: true
                X-Organization: true
              paths:
                id: true
      - http:
          method: put
          path: /partners/auth0/organizations/{id}
          operationId: UpdateOrganization
          authorizer:
            type: REQUEST
            authorizerId: ${ssm:/versify/services/versify/api/authorizer/id}
          cors:
            origin: "*"
            headers: "*"
            allowCredentials: false
          request:
            parameters:
              headers:
                X-Authorization: true
                X-Organization: true
              paths:
                id: true
            schemas:
              application/json: ${file(schemas/auth0/update_organization.json)}
      - http:
          method: post
          path: /partners/auth0/organizations/{id}/invitations
          operationId: CreateOrganizationInvitation
          authorizer:
            type: REQUEST
            authorizerId: ${ssm:/versify/services/versify/api/authorizer/id}
          cors:
            origin: "*"
            headers: "*"
            allowCredentials: false
          request:
            parameters:
              headers:
                X-Authorization: true
                X-Organization: true
              paths:
                id: true
            schemas:
              application/json: ${file(schemas/auth0/create_invitation.json)}
      - http:
          method: get
          path: /partners/auth0/organizations/{id}/invitations
          operationId: ListOrganizationInvitations
          authorizer:
            type: REQUEST
            authorizerId: ${ssm:/versify/services/versify/api/authorizer/id}
          cors:
            origin: "*"
            headers: "*"
            allowCredentials: false
          request:
            parameters:
              headers:
                X-Authorization: true
                X-Organization: true
              paths:
                id: true
      - http:
          method: get
          path: /partners/auth0/organizations/{id}/members
          operationId: ListOrganizationMembers
          authorizer:
            type: REQUEST
            authorizerId: ${ssm:/versify/services/versify/api/authorizer/id}
          cors:
            origin: "*"
            headers: "*"
            allowCredentials: false
          request:
            parameters:
              headers:
                X-Authorization: true
                X-Organization: true
              paths:
                id: true
      - http:
          method: get
          path: /partners/auth0/organizations/{id}/validate
          operationId: ValidateOrganization
          authorizer: aws_iam
      - http:
          method: get
          path: /partners/auth0/users/{id}
          operationId: GetUser
          authorizer:
            type: REQUEST
            authorizerId: ${ssm:/versify/services/versify/api/authorizer/id}
          cors:
            origin: "*"
            headers: "*"
            allowCredentials: false
          request:
            parameters:
              headers:
                X-Authorization: true
              paths:
                id: true
      - http:
          method: put
          path: /partners/auth0/users/{id}
          operationId: UpdateUser
          authorizer:
            type: REQUEST
            authorizerId: ${ssm:/versify/services/versify/api/authorizer/id}
          cors:
            origin: "*"
            headers: "*"
            allowCredentials: false
          request:
            parameters:
              headers:
                X-Authorization: true
              paths:
                id: true
            schemas:
              application/json: ${file(schemas/auth0/update_user.json)}
      - http:
          method: get
          path: /partners/auth0/users/{id}/organizations
          operationId: ListUserOrganizations
          authorizer:
            type: REQUEST
            authorizerId: ${ssm:/versify/services/versify/api/authorizer/id}
          cors:
            origin: "*"
            headers: "*"
            allowCredentials: false
          request:
            parameters:
              headers:
                X-Authorization: true
              paths:
                id: true
  PartnerApi-Mandrill:
    handler: src.routes.mandrill.handler
    name: PartnerApi-Mandrill
    events:
      - http:
          method: post
          path: /partners/mandrill/messages
          operationId: CreateMessage
          authorizer: aws_iam
  PartnerApi-Stripe:
    handler: src.routes.stripe.handler
    name: PartnerApi-Stripe
    events:
      - http:
          method: get
          path: /partners/stripe/customer
          operationId: GetCustomer
          authorizer:
            type: REQUEST
            authorizerId: ${ssm:/versify/services/versify/api/authorizer/id}
          cors:
            origin: "*"
            headers: "*"
            allowCredentials: false
          request:
            parameters:
              headers:
                X-Authorization: true
                X-Organization: true
      - http:
          method: get
          path: /partners/stripe/invoices
          operationId: ListInvoices
          authorizer:
            type: REQUEST
            authorizerId: ${ssm:/versify/services/versify/api/authorizer/id}
          cors:
            origin: "*"
            headers: "*"
            allowCredentials: false
          request:
            parameters:
              headers:
                X-Authorization: true
                X-Organization: true
      - http:
          method: get
          path: /partners/stripe/subscriptions
          operationId: ListSubscriptions
          authorizer: aws_iam
          request:
            parameters:
              headers:
                X-Organization: true
      - http:
          method: post
          path: /partners/stripe/payment_methods
          operationId: CreatePaymentMethod
          authorizer:
            type: REQUEST
            authorizerId: ${ssm:/versify/services/versify/api/authorizer/id}
          cors:
            origin: "*"
            headers: "*"
            allowCredentials: false
          request:
            parameters:
              headers:
                X-Authorization: true
                X-Organization: true
            schemas:
              application/json: ${file(schemas/stripe/create_payment_method.json)}
      - http:
          method: put
          path: /partners/stripe/subscriptions/{id}
          operationId: UpdateSubscription
          authorizer:
            type: REQUEST
            authorizerId: ${ssm:/versify/services/versify/api/authorizer/id}
          cors:
            origin: "*"
            headers: "*"
            allowCredentials: false
          request:
            parameters:
              headers:
                X-Authorization: true
                X-Organization: true
              paths:
                id: true
            schemas:
              application/json: ${file(schemas/stripe/update_subscription.json)}
      - http:
          method: post
          path: /partners/stripe/usage_records
          operationId: CreateUsageRecord
          authorizer: aws_iam
